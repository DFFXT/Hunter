apply plugin: 'groovy'

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.android.tools.build:gradle:3.1.4'
    implementation 'com.android.tools.build:gradle-api:3.1.4'
    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-codec:commons-codec:1.10'
    //noinspection GradleDependency
    implementation 'org.ow2.asm:asm:6.0'
    //noinspection GradleDependency
    implementation 'org.ow2.asm:asm-util:6.0'
    //noinspection GradleDependency
    implementation 'org.ow2.asm:asm-commons:6.0'
    implementation 'com.quinn.hunter:hunter-transform:1.0.1'
}

repositories {
    maven {
        url uri('../repo')
    }
    google()
    jcenter()
    mavenCentral()
}

//ext {
//    bintrayRepo = 'maven'
//    bintrayName = 'hunter-timing-plugin'
//
//    publishedGroupId = 'com.quinn.hunter'
//    libraryName = 'hunter-timing-plugin'
//    artifact = 'hunter-timing-plugin'
//
//    libraryDescription = 'A fast, incremental, cocurrent framework to develop compile plugin for android project'
//
//    siteUrl = 'https://github.com/Leaking/Hunter'
//    gitUrl = 'https://github.com/Leaking/Hunter.git'
//
//    libraryVersion = '1.0.0'
//
//    developerId = 'Leaking'
//    developerName = 'QuinnChen'
//    developerEmail = 'chenhuazhaoao@gmail.com'
//
//    licenseName = 'The Apache Software License, Version 2.0'
//    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    allLicenses = ["Apache-2.0"]
//}
//
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

//publish script for debug mode

apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = 'com.quinn.hunter' // 唯一标识（通常为模块包名，也可以任意）
            pom.artifactId = "hunter-timing-plugin" // 项目名称（通常为类库模块名称，也可以任意）
            pom.version = "1.0.1" // 版本号
            pom.packaging = 'jar'
            repository(url: uri("${rootProject.projectDir}/repo")) // 配置本地仓库路径，项目根目录下的repository目录中
        }
    }
}